
<link rel="stylesheet" href="./css/hub.css">

<!--bulma link-->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">

<!--Google Fonts-->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Comfortaa:wght@300;500&display=swap" rel="stylesheet">

<!--Font Awesome Link-->
<script src="https://kit.fontawesome.com/f3e5b655dc.js" crossorigin="anonymous"></script>



    <!--NAVBAR-->
    <nav class="nav-bar">
        <ul class="navbar-nav">
            <li class="nav-item">
                <a href="/profile" class="nav-link">
                    <i class="fa-regular fa-user" style="color: #fdf4f5;"></i>
                    <span class="link-text logo-text">Profile</span>
                </a>
            </li>
            <li class="nav-item">
                <a href="/history" class="nav-link">
                    <i class="fa-solid fa-clock-rotate-left" style="color: #fdf4f5;"></i>
                    <span class="link-text logo-text">History</span>
                </a>
            </li>
            <li class="nav-item">
                <a href="/contact" class="nav-link">
                    <i class="fa-regular fa-paper-plane" style="color: #fdf4f5;"></i>
                    <span class="link-text logo-text">Contact</span>
                </a>
            </li>
            <li class="nav-item">
                <a href="/" class="nav-link">

                    <i class="fa-solid fa-door-open" style="color: #fdf4f5;"></i>

                    <span class="link-text logo-text">Logout</span>
                </a>
            </li>
        </ul>
    </nav>


    <!--div to contain upload capabilities-->
    <div class="upload-container">
        <div class="cloud-container is-flex is-justify-content-center">
            <button id="upload_widget" class="cloudinary-button">Upload files</button>
        <div id="image-container"></div>
        </div>
        <div class="post-caption">
            <textarea class="textarea" placeholder="Write your post here:" rows="6"></textarea>
        </div>
        <!-- Accounts table -->
        <div class= "tbl-container is-flex is-justify-content-center">
            <div>
                <table class="table is-bordered is-hoverable">
                    <thead>
                        <tr>
                            <th>Username</th>
                            <th>Platform</th>
                            <th>Select</th>
                        </tr>
                    </thead>
                    <tbody>
                        {{#if accounts.length}}
                        {{#each accounts as |account|}}
                        <tr>
                            <td>
                                {{account.secondary_id}}
                                <a href="https://www.{{account.platform}}.com/{{user_id}}/">@{{user_id}}</a>
                            </td>
                            <td>
                                <span class="icon">
                                    <i class="{{platform account.platform}}"></i>
                                </span>
                            </td>
                            <td>
                                <div>
                                <button class="post-button" onclick="postLinkedin({{json account}})">POST</button>
                                </div>
                            </td>
                        </tr>
                        {{/each}}
                        {{/if}}
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    
    <script src="https://upload-widget.cloudinary.com/global/all.js" type="text/javascript"></script>
    
    <script type="text/javascript">
    let postimage;

        var myWidget = cloudinary.createUploadWidget({
            cloudName: 'dov0ohe0b',
            uploadPreset: 'eihxr5yn'
        }, (error, result) => {
            if (!error && result && result.event === "success") {
                console.log('Done! Here is the image info: ', result.info.url, result);
                const button = document.getElementById('upload_widget');
                button.style.display = "none";

                const img = document.createElement('img');
                img.id = 'postimage';
                img.src = result.info.url;
                postimage = result.info.url;

                // Append the img element to the image container
                const imageContainer = document.getElementById('image-container');
                imageContainer.appendChild(img);
            }
        }
        )

    const postLinkedin = async function (account) {
        console.log(account)
        const formData = new FormData();
        formData.append('file', 'http://res.cloudinary.com/dov0ohe0b/image/upload/v1682371991/wbcyrzck0a8yrdzewrxv.png');
        try {
            const response = await fetch('https://cors-anywhere.herokuapp.com/https://api.linkedin.com/v2/assets?action=registerUpload', {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${account.accessToken}`,
                },
                body: JSON.stringify(
                    {
                        "registerUploadRequest": {
                            "recipes": [
                                "urn:li:digitalmediaRecipe:feedshare-image"
                            ],
                            "owner": `urn:li:person:${account.id}`,
                            "serviceRelationships": [
                                {
                                    "relationshipType": "OWNER",
                                    "identifier": "urn:li:userGeneratedContent"
                                }
                            ]
                        }
                    }
                )
            });

            if (response.ok) {
                const json = await response.json();
                console.log(json.value.asset);
                uplaodUrl = json.value.uploadMechanism['com.linkedin.digitalmedia.uploading.MediaUploadHttpRequest']['uploadUrl'];
                console.log(uplaodUrl);
                const response2 = await fetch('https://cors-anywhere.herokuapp.com/' + uplaodUrl, {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${account.accessToken}`,
                        'Content-Type': 'application/binary'
                    },
                    body: formData
                });
                console.log(response2)
                const json2 = await response2.json();
                const response3 = await fetch ('https://cors-anywhere.herokuapp.com/https://api.linkedin.com/v2/ugcPosts', {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${account.accessToken}`
                    },
                    body: JSON.stringify (
                        {
                            "author": `urn:li:person:${account.id}`,
                            "lifecycleState": "PUBLISHED",
                            "specificContent": {
                                "com.linkedin.ugc.ShareContent": {
                                    "shareCommentary": {
                                        "text": "Feeling inspired after meeting so many talented individuals at this year's conference. #talentconnect"
                                    },
                                    "shareMediaCategory": "IMAGE",
                                    "media": [
                                        {
                                            "status": "READY",
                                            "description": {
                                                "text": "Center stage!"
                                            },
                                            "media": json2.value.asset,
                                            "title": {
                                                "text": "LinkedIn Talent Connect 2021"
                                            },
                                        }
                                    ]
                                }
                            },
                            "visibility": {
                                "com.linkedin.ugc.MemberNetworkVisibility": "PUBLIC"
                            }
                        }
                    )
                
                })
                console.log(response3)// Use the asset ID to create a new post
            } else {
                throw new Error('Failed to register upload');
            }
        } catch (error) {
            console.error(error);
            // Display an error message or take some other action
        }
    };



        document.getElementById("upload_widget").addEventListener("click", function () {
            myWidget.open();
        }, false);

    


    </script>

